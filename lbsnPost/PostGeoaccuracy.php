<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lbsnstructure/lbsnstructure.proto

namespace lbsnPost;

use UnexpectedValueException;

/**
 * Protobuf type <code>lbsnPost.PostGeoaccuracy</code>
 */
class PostGeoaccuracy
{
    /**
     * Generated from protobuf enum <code>UNKNOWN = 0;</code>
     */
    const UNKNOWN = 0;
    /**
     * Generated from protobuf enum <code>LATLNG = 1;</code>
     */
    const LATLNG = 1;
    /**
     * Generated from protobuf enum <code>PLACE = 2;</code>
     */
    const PLACE = 2;
    /**
     * Generated from protobuf enum <code>CITY = 3;</code>
     */
    const CITY = 3;
    /**
     * Generated from protobuf enum <code>COUNTRY = 4;</code>
     */
    const COUNTRY = 4;

    private static $valueToName = [
        self::UNKNOWN => 'UNKNOWN',
        self::LATLNG => 'LATLNG',
        self::PLACE => 'PLACE',
        self::CITY => 'CITY',
        self::COUNTRY => 'COUNTRY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PostGeoaccuracy::class, \lbsnPost_PostGeoaccuracy::class);

