<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lbsnstructure/lbsnstructure.proto

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>RelationshipKey</code>
 */
final class RelationshipKey extends \Google\Protobuf\Internal\Message
{
    /**
     *  Many-to-many relationships that 
     *could otherwise not be implemented in the relational lbsn structure. Relationships can 
     *also link entities between two different origin_id's (e.g. different services).
     *
     * Generated from protobuf field <code>.CompositeKey relation_to = 1;</code>
     */
    private $relation_to = null;
    /**
     * Generated from protobuf field <code>.CompositeKey relation_from = 2;</code>
     */
    private $relation_from = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \CompositeKey $relation_to
     *            Many-to-many relationships that 
     *          could otherwise not be implemented in the relational lbsn structure. Relationships can 
     *          also link entities between two different origin_id's (e.g. different services).
     *     @type \CompositeKey $relation_from
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Lbsnstructure\Lbsnstructure::initOnce();
        parent::__construct($data);
    }

    /**
     *  Many-to-many relationships that 
     *could otherwise not be implemented in the relational lbsn structure. Relationships can 
     *also link entities between two different origin_id's (e.g. different services).
     *
     * Generated from protobuf field <code>.CompositeKey relation_to = 1;</code>
     * @return \CompositeKey
     */
    public function getRelationTo()
    {
        return $this->relation_to;
    }

    /**
     *  Many-to-many relationships that 
     *could otherwise not be implemented in the relational lbsn structure. Relationships can 
     *also link entities between two different origin_id's (e.g. different services).
     *
     * Generated from protobuf field <code>.CompositeKey relation_to = 1;</code>
     * @param \CompositeKey $var
     * @return $this
     */
    public function setRelationTo($var)
    {
        GPBUtil::checkMessage($var, \CompositeKey::class);
        $this->relation_to = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.CompositeKey relation_from = 2;</code>
     * @return \CompositeKey
     */
    public function getRelationFrom()
    {
        return $this->relation_from;
    }

    /**
     * Generated from protobuf field <code>.CompositeKey relation_from = 2;</code>
     * @param \CompositeKey $var
     * @return $this
     */
    public function setRelationFrom($var)
    {
        GPBUtil::checkMessage($var, \CompositeKey::class);
        $this->relation_from = $var;

        return $this;
    }

}

