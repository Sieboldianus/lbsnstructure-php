<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lbsnstructure/lbsnstructure.proto

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>lbsnPost</code>
 */
final class lbsnPost extends \Google\Protobuf\Internal\Message
{
    /**
     * Primary Key. A unique identifier of the object across networks.
     *
     * Generated from protobuf field <code>.CompositeKey pkey = 1;</code>
     */
    private $pkey = null;
    /**
     * Only if lat/lng coordinates are available, otherwise substitude this location information from place, city or country table
     * and modify post_geoaccuracy to "place", "city", or "country". Formatting: WKT (Well-Known-Text String)
     *
     * Generated from protobuf field <code>string post_latlng = 2;</code>
     */
    private $post_latlng = '';
    /**
     * Generated from protobuf field <code>.CompositeKey place_pkey = 3;</code>
     */
    private $place_pkey = null;
    /**
     * Generated from protobuf field <code>.CompositeKey city_pkey = 4;</code>
     */
    private $city_pkey = null;
    /**
     * Generated from protobuf field <code>.CompositeKey country_pkey = 5;</code>
     */
    private $country_pkey = null;
    /**
     * Generated from protobuf field <code>.CompositeKey user_pkey = 6;</code>
     */
    private $user_pkey = null;
    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp post_publish_date = 7;</code>
     */
    private $post_publish_date = null;
    /**
     * Generated from protobuf field <code>string post_body = 8;</code>
     */
    private $post_body = '';
    /**
     * Generated from protobuf field <code>.lbsnPost.PostGeoaccuracy post_geoaccuracy = 9;</code>
     */
    private $post_geoaccuracy = 0;
    /**
     * Generated from protobuf field <code>repeated .CompositeKey user_mentions_pkey = 10;</code>
     */
    private $user_mentions_pkey;
    /**
     * Generated from protobuf field <code>repeated string hashtags = 11;</code>
     */
    private $hashtags;
    /**
     * Generated from protobuf field <code>repeated string emoji = 12;</code>
     */
    private $emoji;
    /**
     * Generated from protobuf field <code>int64 post_like_count = 13;</code>
     */
    private $post_like_count = 0;
    /**
     * Generated from protobuf field <code>int64 post_comment_count = 14;</code>
     */
    private $post_comment_count = 0;
    /**
     * Generated from protobuf field <code>int64 post_views_count = 15;</code>
     */
    private $post_views_count = 0;
    /**
     * Generated from protobuf field <code>string post_title = 16;</code>
     */
    private $post_title = '';
    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp post_create_date = 17;</code>
     */
    private $post_create_date = null;
    /**
     * Generated from protobuf field <code>string post_thumbnail_url = 18;</code>
     */
    private $post_thumbnail_url = '';
    /**
     * Generated from protobuf field <code>string post_url = 19;</code>
     */
    private $post_url = '';
    /**
     * Generated from protobuf field <code>.lbsnPost.PostType post_type = 20;</code>
     */
    private $post_type = 0;
    /**
     *Any automatic filters applied to post? (e.g. Photo Filters such as Amarao; Automatic Translations of Text)
     *
     * Generated from protobuf field <code>string post_filter = 21;</code>
     */
    private $post_filter = '';
    /**
     *Number of times this Post has been quoted by other users, e.g. count of Quote-Tweets in Twitter.
     *
     * Generated from protobuf field <code>int64 post_quote_count = 22;</code>
     */
    private $post_quote_count = 0;
    /**
     *Number of times this Post has been shared by other users, e.g. count of Retweets in Twitter.
     *
     * Generated from protobuf field <code>int64 post_share_count = 23;</code>
     */
    private $post_share_count = 0;
    /**
     *Type of input device used by the user to post, for a list see Twitter, e.g. "Web", "IPhone", "Android" etc., recommendation: should be oriented at Twitter source types.
     *
     * Generated from protobuf field <code>string input_source = 24;</code>
     */
    private $input_source = '';
    /**
     *A BCP 47 language identifier corresponding to the (machine-detected language) of the Post body-text, empty/whitespace if no language could be detected, NULL if not specified.
     *
     * Generated from protobuf field <code>.Language post_language = 25;</code>
     */
    private $post_language = null;
    /**
     *An integer for specifying licenses attached to post (e.g. All Rights Reserved = 0). Numbers shamelessly ripped from Flickr: https://www.flickr.com/services/api/flickr.photos.licenses.getInfo.html
     *
     * Generated from protobuf field <code>int32 post_content_license = 26;</code>
     */
    private $post_content_license = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \CompositeKey $pkey
     *           Primary Key. A unique identifier of the object across networks.
     *     @type string $post_latlng
     *           Only if lat/lng coordinates are available, otherwise substitude this location information from place, city or country table
     *           and modify post_geoaccuracy to "place", "city", or "country". Formatting: WKT (Well-Known-Text String)
     *     @type \CompositeKey $place_pkey
     *     @type \CompositeKey $city_pkey
     *     @type \CompositeKey $country_pkey
     *     @type \CompositeKey $user_pkey
     *     @type \Google\Protobuf\Timestamp $post_publish_date
     *     @type string $post_body
     *     @type int $post_geoaccuracy
     *     @type \CompositeKey[]|\Google\Protobuf\Internal\RepeatedField $user_mentions_pkey
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $hashtags
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $emoji
     *     @type int|string $post_like_count
     *     @type int|string $post_comment_count
     *     @type int|string $post_views_count
     *     @type string $post_title
     *     @type \Google\Protobuf\Timestamp $post_create_date
     *     @type string $post_thumbnail_url
     *     @type string $post_url
     *     @type int $post_type
     *     @type string $post_filter
     *          Any automatic filters applied to post? (e.g. Photo Filters such as Amarao; Automatic Translations of Text)
     *     @type int|string $post_quote_count
     *          Number of times this Post has been quoted by other users, e.g. count of Quote-Tweets in Twitter.
     *     @type int|string $post_share_count
     *          Number of times this Post has been shared by other users, e.g. count of Retweets in Twitter.
     *     @type string $input_source
     *          Type of input device used by the user to post, for a list see Twitter, e.g. "Web", "IPhone", "Android" etc., recommendation: should be oriented at Twitter source types.
     *     @type \Language $post_language
     *          A BCP 47 language identifier corresponding to the (machine-detected language) of the Post body-text, empty/whitespace if no language could be detected, NULL if not specified.
     *     @type int $post_content_license
     *          An integer for specifying licenses attached to post (e.g. All Rights Reserved = 0). Numbers shamelessly ripped from Flickr: https://www.flickr.com/services/api/flickr.photos.licenses.getInfo.html
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Lbsnstructure\Lbsnstructure::initOnce();
        parent::__construct($data);
    }

    /**
     * Primary Key. A unique identifier of the object across networks.
     *
     * Generated from protobuf field <code>.CompositeKey pkey = 1;</code>
     * @return \CompositeKey
     */
    public function getPkey()
    {
        return $this->pkey;
    }

    /**
     * Primary Key. A unique identifier of the object across networks.
     *
     * Generated from protobuf field <code>.CompositeKey pkey = 1;</code>
     * @param \CompositeKey $var
     * @return $this
     */
    public function setPkey($var)
    {
        GPBUtil::checkMessage($var, \CompositeKey::class);
        $this->pkey = $var;

        return $this;
    }

    /**
     * Only if lat/lng coordinates are available, otherwise substitude this location information from place, city or country table
     * and modify post_geoaccuracy to "place", "city", or "country". Formatting: WKT (Well-Known-Text String)
     *
     * Generated from protobuf field <code>string post_latlng = 2;</code>
     * @return string
     */
    public function getPostLatlng()
    {
        return $this->post_latlng;
    }

    /**
     * Only if lat/lng coordinates are available, otherwise substitude this location information from place, city or country table
     * and modify post_geoaccuracy to "place", "city", or "country". Formatting: WKT (Well-Known-Text String)
     *
     * Generated from protobuf field <code>string post_latlng = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setPostLatlng($var)
    {
        GPBUtil::checkString($var, True);
        $this->post_latlng = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.CompositeKey place_pkey = 3;</code>
     * @return \CompositeKey
     */
    public function getPlacePkey()
    {
        return $this->place_pkey;
    }

    /**
     * Generated from protobuf field <code>.CompositeKey place_pkey = 3;</code>
     * @param \CompositeKey $var
     * @return $this
     */
    public function setPlacePkey($var)
    {
        GPBUtil::checkMessage($var, \CompositeKey::class);
        $this->place_pkey = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.CompositeKey city_pkey = 4;</code>
     * @return \CompositeKey
     */
    public function getCityPkey()
    {
        return $this->city_pkey;
    }

    /**
     * Generated from protobuf field <code>.CompositeKey city_pkey = 4;</code>
     * @param \CompositeKey $var
     * @return $this
     */
    public function setCityPkey($var)
    {
        GPBUtil::checkMessage($var, \CompositeKey::class);
        $this->city_pkey = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.CompositeKey country_pkey = 5;</code>
     * @return \CompositeKey
     */
    public function getCountryPkey()
    {
        return $this->country_pkey;
    }

    /**
     * Generated from protobuf field <code>.CompositeKey country_pkey = 5;</code>
     * @param \CompositeKey $var
     * @return $this
     */
    public function setCountryPkey($var)
    {
        GPBUtil::checkMessage($var, \CompositeKey::class);
        $this->country_pkey = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.CompositeKey user_pkey = 6;</code>
     * @return \CompositeKey
     */
    public function getUserPkey()
    {
        return $this->user_pkey;
    }

    /**
     * Generated from protobuf field <code>.CompositeKey user_pkey = 6;</code>
     * @param \CompositeKey $var
     * @return $this
     */
    public function setUserPkey($var)
    {
        GPBUtil::checkMessage($var, \CompositeKey::class);
        $this->user_pkey = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp post_publish_date = 7;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getPostPublishDate()
    {
        return $this->post_publish_date;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp post_publish_date = 7;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setPostPublishDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->post_publish_date = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string post_body = 8;</code>
     * @return string
     */
    public function getPostBody()
    {
        return $this->post_body;
    }

    /**
     * Generated from protobuf field <code>string post_body = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setPostBody($var)
    {
        GPBUtil::checkString($var, True);
        $this->post_body = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.lbsnPost.PostGeoaccuracy post_geoaccuracy = 9;</code>
     * @return int
     */
    public function getPostGeoaccuracy()
    {
        return $this->post_geoaccuracy;
    }

    /**
     * Generated from protobuf field <code>.lbsnPost.PostGeoaccuracy post_geoaccuracy = 9;</code>
     * @param int $var
     * @return $this
     */
    public function setPostGeoaccuracy($var)
    {
        GPBUtil::checkEnum($var, \lbsnPost_PostGeoaccuracy::class);
        $this->post_geoaccuracy = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .CompositeKey user_mentions_pkey = 10;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getUserMentionsPkey()
    {
        return $this->user_mentions_pkey;
    }

    /**
     * Generated from protobuf field <code>repeated .CompositeKey user_mentions_pkey = 10;</code>
     * @param \CompositeKey[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setUserMentionsPkey($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \CompositeKey::class);
        $this->user_mentions_pkey = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated string hashtags = 11;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getHashtags()
    {
        return $this->hashtags;
    }

    /**
     * Generated from protobuf field <code>repeated string hashtags = 11;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setHashtags($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->hashtags = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated string emoji = 12;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getEmoji()
    {
        return $this->emoji;
    }

    /**
     * Generated from protobuf field <code>repeated string emoji = 12;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setEmoji($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->emoji = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 post_like_count = 13;</code>
     * @return int|string
     */
    public function getPostLikeCount()
    {
        return $this->post_like_count;
    }

    /**
     * Generated from protobuf field <code>int64 post_like_count = 13;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPostLikeCount($var)
    {
        GPBUtil::checkInt64($var);
        $this->post_like_count = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 post_comment_count = 14;</code>
     * @return int|string
     */
    public function getPostCommentCount()
    {
        return $this->post_comment_count;
    }

    /**
     * Generated from protobuf field <code>int64 post_comment_count = 14;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPostCommentCount($var)
    {
        GPBUtil::checkInt64($var);
        $this->post_comment_count = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 post_views_count = 15;</code>
     * @return int|string
     */
    public function getPostViewsCount()
    {
        return $this->post_views_count;
    }

    /**
     * Generated from protobuf field <code>int64 post_views_count = 15;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPostViewsCount($var)
    {
        GPBUtil::checkInt64($var);
        $this->post_views_count = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string post_title = 16;</code>
     * @return string
     */
    public function getPostTitle()
    {
        return $this->post_title;
    }

    /**
     * Generated from protobuf field <code>string post_title = 16;</code>
     * @param string $var
     * @return $this
     */
    public function setPostTitle($var)
    {
        GPBUtil::checkString($var, True);
        $this->post_title = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp post_create_date = 17;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getPostCreateDate()
    {
        return $this->post_create_date;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp post_create_date = 17;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setPostCreateDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->post_create_date = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string post_thumbnail_url = 18;</code>
     * @return string
     */
    public function getPostThumbnailUrl()
    {
        return $this->post_thumbnail_url;
    }

    /**
     * Generated from protobuf field <code>string post_thumbnail_url = 18;</code>
     * @param string $var
     * @return $this
     */
    public function setPostThumbnailUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->post_thumbnail_url = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string post_url = 19;</code>
     * @return string
     */
    public function getPostUrl()
    {
        return $this->post_url;
    }

    /**
     * Generated from protobuf field <code>string post_url = 19;</code>
     * @param string $var
     * @return $this
     */
    public function setPostUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->post_url = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.lbsnPost.PostType post_type = 20;</code>
     * @return int
     */
    public function getPostType()
    {
        return $this->post_type;
    }

    /**
     * Generated from protobuf field <code>.lbsnPost.PostType post_type = 20;</code>
     * @param int $var
     * @return $this
     */
    public function setPostType($var)
    {
        GPBUtil::checkEnum($var, \lbsnPost_PostType::class);
        $this->post_type = $var;

        return $this;
    }

    /**
     *Any automatic filters applied to post? (e.g. Photo Filters such as Amarao; Automatic Translations of Text)
     *
     * Generated from protobuf field <code>string post_filter = 21;</code>
     * @return string
     */
    public function getPostFilter()
    {
        return $this->post_filter;
    }

    /**
     *Any automatic filters applied to post? (e.g. Photo Filters such as Amarao; Automatic Translations of Text)
     *
     * Generated from protobuf field <code>string post_filter = 21;</code>
     * @param string $var
     * @return $this
     */
    public function setPostFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->post_filter = $var;

        return $this;
    }

    /**
     *Number of times this Post has been quoted by other users, e.g. count of Quote-Tweets in Twitter.
     *
     * Generated from protobuf field <code>int64 post_quote_count = 22;</code>
     * @return int|string
     */
    public function getPostQuoteCount()
    {
        return $this->post_quote_count;
    }

    /**
     *Number of times this Post has been quoted by other users, e.g. count of Quote-Tweets in Twitter.
     *
     * Generated from protobuf field <code>int64 post_quote_count = 22;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPostQuoteCount($var)
    {
        GPBUtil::checkInt64($var);
        $this->post_quote_count = $var;

        return $this;
    }

    /**
     *Number of times this Post has been shared by other users, e.g. count of Retweets in Twitter.
     *
     * Generated from protobuf field <code>int64 post_share_count = 23;</code>
     * @return int|string
     */
    public function getPostShareCount()
    {
        return $this->post_share_count;
    }

    /**
     *Number of times this Post has been shared by other users, e.g. count of Retweets in Twitter.
     *
     * Generated from protobuf field <code>int64 post_share_count = 23;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPostShareCount($var)
    {
        GPBUtil::checkInt64($var);
        $this->post_share_count = $var;

        return $this;
    }

    /**
     *Type of input device used by the user to post, for a list see Twitter, e.g. "Web", "IPhone", "Android" etc., recommendation: should be oriented at Twitter source types.
     *
     * Generated from protobuf field <code>string input_source = 24;</code>
     * @return string
     */
    public function getInputSource()
    {
        return $this->input_source;
    }

    /**
     *Type of input device used by the user to post, for a list see Twitter, e.g. "Web", "IPhone", "Android" etc., recommendation: should be oriented at Twitter source types.
     *
     * Generated from protobuf field <code>string input_source = 24;</code>
     * @param string $var
     * @return $this
     */
    public function setInputSource($var)
    {
        GPBUtil::checkString($var, True);
        $this->input_source = $var;

        return $this;
    }

    /**
     *A BCP 47 language identifier corresponding to the (machine-detected language) of the Post body-text, empty/whitespace if no language could be detected, NULL if not specified.
     *
     * Generated from protobuf field <code>.Language post_language = 25;</code>
     * @return \Language
     */
    public function getPostLanguage()
    {
        return $this->post_language;
    }

    /**
     *A BCP 47 language identifier corresponding to the (machine-detected language) of the Post body-text, empty/whitespace if no language could be detected, NULL if not specified.
     *
     * Generated from protobuf field <code>.Language post_language = 25;</code>
     * @param \Language $var
     * @return $this
     */
    public function setPostLanguage($var)
    {
        GPBUtil::checkMessage($var, \Language::class);
        $this->post_language = $var;

        return $this;
    }

    /**
     *An integer for specifying licenses attached to post (e.g. All Rights Reserved = 0). Numbers shamelessly ripped from Flickr: https://www.flickr.com/services/api/flickr.photos.licenses.getInfo.html
     *
     * Generated from protobuf field <code>int32 post_content_license = 26;</code>
     * @return int
     */
    public function getPostContentLicense()
    {
        return $this->post_content_license;
    }

    /**
     *An integer for specifying licenses attached to post (e.g. All Rights Reserved = 0). Numbers shamelessly ripped from Flickr: https://www.flickr.com/services/api/flickr.photos.licenses.getInfo.html
     *
     * Generated from protobuf field <code>int32 post_content_license = 26;</code>
     * @param int $var
     * @return $this
     */
    public function setPostContentLicense($var)
    {
        GPBUtil::checkInt32($var);
        $this->post_content_license = $var;

        return $this;
    }

}

